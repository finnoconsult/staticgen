extends ./blog.jade


append styles
	style
		| body{ border-left:2px solid #00bd59;}
		| .post-teaser{max-width: 50em;}
		| .videoContainer { display: grid; width: 100%; height: auto; grid-template-areas: "header"; height: 53vw; margin-bottom: 5em; }
		| .videoContainer h1 { grid-area: header; opacity: 0; }
		| .videoControl { grid-area: header; overflow: hidden; transform: scale(1.08) translateZ(0); margin: auto; width: 100%; height: 100%; display: grid; background: none; border: none; outline: none; }
		| .videoControl video { width: 100%; height: 100%; display: grid; outline: none; }
		| .videoContainer, .videoContainer video, .videoContainer h1 { transition: all 1s ease;}
		| .videoContainer.played { height: 5em; }
		| @media(max-width: 30em) {.videoContainer.played { height: 11em; }}
		| .videoContainer.played .videoControl { opacity: 0; }
		| .videoContainer.played h1 { opacity: 1; }

block main
	main.narrative
		if (heading || title) && !media.video
			h1= heading || title
		if media.video
			div.videoContainer
				h1= media.title
				button(onclick="javascript:playVideo()", class="videoControl")
					video(src=media.video, id="blogpostvideo" width="640px", height="360px", autoplay="autoplay", poster="/img/play.svg")
			script
				| var video = document.querySelector('video#blogpostvideo');
				| function playVideo() {if (video.paused && !(video.played && video.played.length > 0)){video.play();}}
				//- | playVideo();
				//- | console.log(video.paused);
				//- | setTimeout(function () {console.log(video.paused);}, 1000);
				| var videoContainer = document.querySelector('div.videoContainer');
				| video.addEventListener('ended',function() {videoContainer.classList.add('played');});
		p.post-teaser
			img(src=media.hero, alt="")
		p.created
			span.print= __("Written by ")
			a.avatar(href=linkTo(locale, "/author/" + urlify(author)))
				if knownAuthors[author]
					img(src=knownAuthors[author].photo, alt="", height=40, width=40)
				= " " + author
			span.print= __(" on ")
			time.entry-date.published(datetime=created.toISOString().split("T")[0])= moment(created).format("LL")
			span.print= "."
		!= contents
		aside.extension.share.screen#share
			h2.prelude= __("Share this article")
			p
				each platform, sep in sharingLinks
					if sep
						span.print= ", "
					a.button(class="share-"+platform.id, href=platform.dispatch.replace(/\{\{text\}\}/g, encodeURIComponent(title)).replace(/\{\{url\}\}/g, encodeURIComponent(homepage + path)))= __(platform.name)
				span.print= "."
		section.extension.tagged.screen#tags
			h2.prelude= __("Filed under")
			p
				each tag, sep in tags
					if sep
						span.print= ", "
					a.button(href=linkTo(locale, "/tag/" + urlify(tag)))= tag
				span.print= "."
	aside.narrative.dense.invert.screen
		section.related-content#related
			h2.prelude= __("You might also like")
			ul.article-teaser-list
				each relatedArticle in blog.filter(function (item) { return item.locale === locale && item.path !== path; }).slice(0, 3)
					li.article-teaser
						a(href=relatedArticle.path)
							img(src=relatedArticle.media.thumbnail, alt="", width=80, height=60)
							br
							time(datetime=relatedArticle.created.toISOString().split("T")[0])= moment(relatedArticle.created).format("LL")
							br
							strong= relatedArticle.heading || relatedArticle.title
							br
							span= relatedArticle.description
